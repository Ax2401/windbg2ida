+-------------------------------------------------------------------------+
|                     W2I(Windbg2IDA Code Coverage)                       |
|        This file has been generated by Windbg2IDA Code Coverage         |
|                              License : MIT                              |
|                  Written by Sina Karvandi (Intel80x86)                  |
+-------------------------------------------------------------------------+
Windbg2IDA Version=1.0.0.0
Image Name=ntkrnlmp.exe 
Module Index=0x00
Module Base Address=fffff80617a00000
Module End Address=fffff806184b2000
Module Version=undefined
InclueRegistersAsComment=true
ShowBranchTakenOrNot=true
Color=2233216
Instructions=
rsp = fffff8061d670728 rbp = fffff8061d670800 [gotonewline][ss:0018:fffff806`1d670738=fffff8061d1318fe] 
fffff806`17d6a015 48896c2410      mov     qword ptr [rsp+10h],rbp ss:0018:fffff806`1d670738=fffff8061d1318fe
rsi = ffffe4813769ed80 rsp = fffff8061d670728 [gotonewline][ss:0018:fffff806`1d670740=0000000000000000] 
fffff806`17d6a01a 4889742418      mov     qword ptr [rsp+18h],rsi ss:0018:fffff806`1d670740=0000000000000000
rdi = ffffe48139332c40  
fffff806`17d6a01f 57              push    rdi
r14 = ffffe4813942e1e0  
fffff806`17d6a020 4156            push    r14
r15 = 0000000000000000  
fffff806`17d6a022 4157            push    r15
rsp = fffff8061d670710  
fffff806`17d6a024 4883ec30        sub     rsp,30h
rax = fffff80617a9bb60 [gotonewline][gs:002b:00000000`00000020=fffff80615abd180] 
fffff806`17d6a028 65488b042520000000 mov   rax,qword ptr gs:[20h] gs:002b:00000000`00000020=fffff80615abd180
rbx = ffffe48139332b80  
fffff806`17d6a031 33db            xor     ebx,ebx
r15 = 0000000000000000  
fffff806`17d6a033 440fb73dc53f2000 movzx   r15d,word ptr [nt!KeNumberNodes (fffff806`17f6e000)] ds:002b:fffff806`17f6e000=0001
rbp = fffff8061d670800 r8 = 00000000424e444e  
fffff806`17d6a03b 418be8          mov     ebp,r8d
rdx = 0000000000000038 rsi = ffffe4813769ed80  
fffff806`17d6a03e 488bf2          mov     rsi,rdx
rbx = 0000000000000000 rsp = fffff8061d6706e0 [gotonewline][ss:0018:fffff806`1d670748=1d670800] 
fffff806`17d6a041 895c2468        mov     dword ptr [rsp+68h],ebx ss:0018:fffff806`1d670748=1d670800
rcx = 0000000000000200 rdi = ffffe48139332c40  
fffff806`17d6a045 8bf9            mov     edi,ecx
rax = fffff80615abd180 r9 = ffffe48139332b80 [gotonewline][(fffff806`17f8a240)}] 
fffff806`17d6a047 4c8b88c0000000  mov     r9,qword ptr [rax+0C0h] ds:002b:fffff806`15abd240={nt!ExNode0 (fffff806`17f8a240)}
r9 = fffff80617f8a240 r14 = ffffe4813942e1e0  
fffff806`17d6a04e 450fb7b192000000 movzx   r14d,word ptr [r9+92h] ds:002b:fffff806`17f8a2d2=0000
rax = fffff80615abd180 r14 = 0000000000000000  
fffff806`17d6a056 418bc6          mov     eax,r14d
rax = 0000000000000000 r9 = fffff80617f8a240  
fffff806`17d6a059 448bc8          mov     r9d,eax
rbx = 0000000000000000 rsp = fffff8061d6706e0 [gotonewline][ss:0018:fffff806`1d670700=1d670710] 
fffff806`17d6a05c 895c2420        mov     dword ptr [rsp+20h],ebx ss:0018:fffff806`1d670700=1d670710
rbp = 00000000424e444e r8 = 00000000424e444e  
fffff806`17d6a060 448bc5          mov     r8d,ebp
rdx = 0000000000000038 rsi = 0000000000000038  
fffff806`17d6a063 488bd6          mov     rdx,rsi
rcx = 0000000000000200 rdi = 0000000000000200  
fffff806`17d6a066 8bcf            mov     ecx,edi
rax = 0000000000000000  
fffff806`17d6a068 e8e383ccff      call    nt!ExAllocateHeapPool (fffff806`17a32450)
rbp = 00000000424e444e  
fffff806`17a32450 4055            push    rbp
rbx = 0000000000000000  
fffff806`17a32452 53              push    rbx
rsi = 0000000000000038  
fffff806`17a32453 56              push    rsi
rdi = 0000000000000200  
fffff806`17a32454 57              push    rdi
r12 = 0000000000000000  
fffff806`17a32455 4154            push    r12
r15 = 0000000000000001  
fffff806`17a32457 4157            push    r15
rsp = fffff8061d6706a8 rbp = 00000000424e444e  
fffff806`17a32459 488d6c24f8      lea     rbp,[rsp-8]
rsp = fffff8061d6706a8  
fffff806`17a3245e 4881ec08010000  sub     rsp,108h
rsi = 0000000000000038  
fffff806`17a32465 33f6            xor     esi,esi
rbx = 0000000000000000 r9 = 0000000000000000  
fffff806`17a32467 418bd9          mov     ebx,r9d
rax = 0000000000000000 rcx = 0000000000000200  
fffff806`17a3246a 8bc1            mov     eax,ecx
rsi = 0000000000000000 rsp = fffff8061d6705a0 [gotonewline][ss:0018:fffff806`1d6705e0=0000000000000000] 
fffff806`17a3246c 4889742440      mov     qword ptr [rsp+40h],rsi ss:0018:fffff806`1d6705e0=0000000000000000
rax = 0000000000000200  
fffff806`17a32471 83e044          and     eax,44h
r8 = 00000000424e444e r12 = 0000000000000000  
fffff806`17a32474 458be0          mov     r12d,r8d
rdx = 0000000000000038 rdi = 0000000000000200  
fffff806`17a32477 488bfa          mov     rdi,rdx
rcx = 0000000000000200 r9 = 0000000000000000  
fffff806`17a3247a 448bc9          mov     r9d,ecx
rax = 0000000000000000  
fffff806`17a3247d 3c44            cmp     al,44h
 
fffff806`17a3247f 0f84edf71b00    je      nt!ExAllocateHeapPool+0x1bf822 (fffff806`17bf1c72) [br=0]
rdx = 0000000000000038 [gotonewline][ds:002b:fffff806`17f6f474=00000000] 
fffff806`17a32485 8b15e9cf5300    mov     edx,dword ptr [nt!ExpPoolFlags (fffff806`17f6f474)] ds:002b:fffff806`17f6f474=00000000
r9 = 0000000000000200  
fffff806`17a3248b 41f7c101020000  test    r9d,201h
r9 = 0000000000000200 r15 = 0000000000000001  
fffff806`17a32492 458bf9          mov     r15d,r9d
rcx = 0000000000000200  
fffff806`17a32495 0f94c1          sete    cl
rdx = 0000000000000000  
fffff806`17a32498 0fbae20a        bt      edx,0Ah
rax = 0000000000000000  
fffff806`17a3249c 0f92c0          setb    al
r15 = 0000000000000200  
fffff806`17a3249f 410fbaef09      bts     r15d,9
rax = 0000000000000000 rcx = 0000000000000200  
fffff806`17a324a4 22c8            and     cl,al
r9 = 0000000000000200 r15 = 0000000000000200  
fffff806`17a324a6 450f44f9        cmove   r15d,r9d
rdx = 0000000000000000  
fffff806`17a324aa f6c208          test    dl,8
 
fffff806`17a324ad 0f85c8f71b00    jne     nt!ExAllocateHeapPool+0x1bf82b (fffff806`17bf1c7b) [br=0]
r12 = 00000000424e444e  
fffff806`17a324b3 4181e4ffffff7f  and     r12d,7FFFFFFFh
rsp = fffff8061d6705a0 r13 = ffffe481394b7d70 [gotonewline][ss:0018:fffff806`1d6706e8=fffff80617d6a024] 
fffff806`17a324ba 4c89ac2448010000 mov     qword ptr [rsp+148h],r13 ss:0018:fffff806`1d6706e8=fffff80617d6a024
rbp = fffff8061d6706a0 r12 = 00000000424e444e [gotonewline][ss:0018:fffff806`1d6706f0=00000010] 
fffff806`17a324c2 44896550        mov     dword ptr [rbp+50h],r12d ss:0018:fffff806`1d6706f0=00000010
rsp = fffff8061d6705a0 r14 = 0000000000000000 [gotonewline][ss:0018:fffff806`1d6706a0=fffff8061d6706b0] 
fffff806`17a324c6 4c89b42400010000 mov     qword ptr [rsp+100h],r14 ss:0018:fffff806`1d6706a0=fffff8061d6706b0
 
fffff806`17a324ce 0f8491fc1b00    je      nt!ExAllocateHeapPool+0x1bfd15 (fffff806`17bf2165) [br=0]
r15 = 0000000000000200  
fffff806`17a324d4 4585ff          test    r15d,r15d
 
fffff806`17a324d7 7823            js      nt!ExAllocateHeapPool+0xac (fffff806`17a324fc) [br=0]
rdi = 0000000000000038  
fffff806`17a324d9 4881ffe00f0000  cmp     rdi,0FE0h
 
fffff806`17a324e0 771a            ja      nt!ExAllocateHeapPool+0xac (fffff806`17a324fc) [br=0]
rax = 0000000000000000 r8 = 00000000424e444e [gotonewline][ds:002b:fffff806`17f6f4a4=00000000] 
fffff806`17a324e2 448b05bbcf5300  mov     r8d,dword ptr [nt!MmSpecialPoolTag (fffff806`17f6f4a4)] ds:002b:fffff806`17f6f4a4=00000000
r8 = 0000000000000000  
fffff806`17a324e9 4585c0          test    r8d,r8d
 
fffff806`17a324ec 0f85bcf71b00    jne     nt!ExAllocateHeapPool+0x1bf85e (fffff806`17bf1cae) [br=0]
rbp = fffff8061d6706a0  
fffff806`17a324f2 f6456001        test    byte ptr [rbp+60h],1 ss:0018:fffff806`1d670700=00
 
fffff806`17a324f6 0f85e4f71b00    jne     nt!ExAllocateHeapPool+0x1bf890 (fffff806`17bf1ce0) [br=0]
r8 = 0000000000000000  
fffff806`17a324fc 41b801000000    mov     r8d,1
rdi = 0000000000000038  
fffff806`17a32502 4885ff          test    rdi,rdi
 
fffff806`17a32505 0f8414f81b00    je      nt!ExAllocateHeapPool+0x1bf8cf (fffff806`17bf1d1f) [br=0]
rbx = 0000000000000000  
fffff806`17a3250b 81fb00000080    cmp     ebx,80000000h
 
fffff806`17a32511 0f8433f81b00    je      nt!ExAllocateHeapPool+0x1bf8fa (fffff806`17bf1d4a) [br=0]
rax = 0000000000000000  
fffff806`17a32517 0fb705e2ba5300  movzx   eax,word ptr [nt!KeNumberNodes (fffff806`17f6e000)] ds:002b:fffff806`17f6e000=0001
rax = 0000000000000001 rbx = 0000000000000000  
fffff806`17a3251e 3bd8            cmp     ebx,eax
 
fffff806`17a32520 0f8301f81b00    jae     nt!ExAllocateHeapPool+0x1bf8d7 (fffff806`17bf1d27) [br=0]
rbx = 0000000000000000  
fffff806`17a32526 81fb00000080    cmp     ebx,80000000h
 
fffff806`17a3252c 0f8418f81b00    je      nt!ExAllocateHeapPool+0x1bf8fa (fffff806`17bf1d4a) [br=0]
rbx = 0000000000000000  
fffff806`17a32532 3b1d18a24300    cmp     ebx,dword ptr [nt!ExPoolState+0x38d0 (fffff806`17e6c750)] ds:002b:fffff806`17e6c750=00000001
 
fffff806`17a32538 0f8328f81b00    jae     nt!ExAllocateHeapPool+0x1bf916 (fffff806`17bf1d66) [br=0]
rax = 0000000000000001 rbx = 0000000000000000  
fffff806`17a3253e 8bc3            mov     eax,ebx
rax = 0000000000000000 rcx = 0000000000000200  
fffff806`17a32540 4869c8c0200000  imul    rcx,rax,20C0h
rax = 0000000000000000  
fffff806`17a32547 488d0532a24300  lea     rax,[nt!ExPoolState+0x3900 (fffff806`17e6c780)]
rax = fffff80617e6c780 rcx = 0000000000000000  
fffff806`17a3254e 4803c8          add     rcx,rax
r15 = 0000000000000200  
fffff806`17a32551 4585ff          test    r15d,r15d
 
fffff806`17a32554 0f887b080000    js      nt!ExAllocateHeapPool+0x985 (fffff806`17a32dd5) [br=0]
rax = fffff80617e6c780 r15 = 0000000000000200  
fffff806`17a3255a 418bc7          mov     eax,r15d
rax = 0000000000000200  
fffff806`17a3255d 83e021          and     eax,21h
rax = 0000000000000000  
fffff806`17a32560 3c21            cmp     al,21h
 
fffff806`17a32562 0f8474040000    je      nt!ExAllocateHeapPool+0x58c (fffff806`17a329dc) [br=0]
r8 = 0000000000000001 r15 = 0000000000000200  
fffff806`17a32568 4584f8          test    r8b,r15b
 
fffff806`17a3256b 0f84fb020000    je      nt!ExAllocateHeapPool+0x41c (fffff806`17a3286c) [br=1]
rax = 0000000000000000 rsi = 0000000000000000  
fffff806`17a3286c 488bc6          mov     rax,rsi
r15 = 0000000000000200  
fffff806`17a3286f 410fbae709      bt      r15d,9
 
fffff806`17a32874 0f83fcfcffff    jae     nt!ExAllocateHeapPool+0x126 (fffff806`17a32576) [br=0]
rax = 0000000000000000 r8 = 0000000000000001  
fffff806`17a3287a 498bc0          mov     rax,r8
 
fffff806`17a3287d e9f4fcffff      jmp     nt!ExAllocateHeapPool+0x126 (fffff806`17a32576)
rax = 0000000000000001 rcx = fffff80617e6c780 r13 = ffffe481394b7d70 [gotonewline][ds:002b:fffff806`17e6c788=ffffe48134002000] 
fffff806`17a32576 4c8b2cc1        mov     r13,qword ptr [rcx+rax*8] ds:002b:fffff806`17e6c788=ffffe48134002000
rdi = 0000000000000038  
fffff806`17a3257a 4881ffe00f0000  cmp     rdi,0FE0h
 
fffff806`17a32581 0f877f040000    ja      nt!ExAllocateHeapPool+0x5b6 (fffff806`17a32a06) [br=0]
rdi = 0000000000000038  
fffff806`17a32587 4883c710        add     rdi,10h
r15 = 0000000000000200  
fffff806`17a3258b 41f6c704        test    r15b,4
 
fffff806`17a3258f 0f85b3030000    jne     nt!ExAllocateHeapPool+0x4f8 (fffff806`17a32948) [br=0]
rdi = 0000000000000048  
fffff806`17a32595 4883c70f        add     rdi,0Fh
rip = fffff80617a32599 r10 = ffffe48139332b80  
fffff806`17a32599 4c8d1560dafcff  lea     r10,[nt!SeConvertSecurityDescriptorToStringSecurityDescriptor <PERF> (nt+0x0) (fffff806`17a00000)]
rdi = 0000000000000057  
fffff806`17a325a0 4883e7f0        and     rdi,0FFFFFFFFFFFFFFF0h
rdi = 0000000000000050 rsp = fffff8061d6705a0 [gotonewline][ss:0018:fffff806`1d670600=0000000000000000] 
fffff806`17a325a4 48897c2460      mov     qword ptr [rsp+60h],rdi ss:0018:fffff806`1d670600=0000000000000000
rax = 0000000000000001 rdi = 0000000000000050  
fffff806`17a325a9 488d87fffdffff  lea     rax,[rdi-201h]
rax = fffffffffffffe4f  
fffff806`17a325b0 483d7f0d0000    cmp     rax,0D7Fh
 
fffff806`17a325b6 0f861b030000    jbe     nt!ExAllocateHeapPool+0x487 (fffff806`17a328d7) [br=0]
rcx = fffff80617e6c780 r13 = ffffe48134002000 [gotonewline][ds:002b:ffffe481`34002030=0000000000000000] 
fffff806`17a325bc 498b4d30        mov     rcx,qword ptr [r13+30h] ds:002b:ffffe481`34002030=0000000000000000
r13 = ffffe48134002000 r14 = 0000000000000000 [gotonewline][ds:002b:ffffe481`34002014=04000000] 
fffff806`17a325c0 458b7514        mov     r14d,dword ptr [r13+14h] ds:002b:ffffe481`34002014=04000000
rax = fffffffffffffe4f rcx = 0000000000000000  
fffff806`17a325c4 488bc1          mov     rax,rcx
r14 = 0000000004000000  
fffff806`17a325c7 4181e60b0f0093  and     r14d,93000F0Bh
rcx = 0000000000000000  
fffff806`17a325ce 4885c9          test    rcx,rcx
 
fffff806`17a325d1 0f856bf91b00    jne     nt!ExAllocateHeapPool+0x1bfaf2 (fffff806`17bf1f42) [br=0]
rax = 0000000000000000 [gotonewline][ds:002b:fffff806`17e33568=0000000000000000] 
fffff806`17a325d7 488b058a0f4000  mov     rax,qword ptr [nt!RtlpHpHeapGlobals+0x28 (fffff806`17e33568)] ds:002b:fffff806`17e33568=0000000000000000
rax = 0000000000000000  
fffff806`17a325de 4885c0          test    rax,rax
 
fffff806`17a325e1 0f855bf91b00    jne     nt!ExAllocateHeapPool+0x1bfaf2 (fffff806`17bf1f42) [br=0]
rsi = 0000000000000000 rsp = fffff8061d6705a0 [gotonewline][ss:0018:fffff806`1d6705e8=00000000] 
fffff806`17a325e7 89742448        mov     dword ptr [rsp+48h],esi ss:0018:fffff806`1d6705e8=00000000
rax = 0000000000000000 rsi = 0000000000000000  
fffff806`17a325eb 488bc6          mov     rax,rsi
rax = 0000000000000000 rsp = fffff8061d6705a0 [gotonewline][ss:0018:fffff806`1d670618=0000000000000000] 
fffff806`17a325ee 4889442478      mov     qword ptr [rsp+78h],rax ss:0018:fffff806`1d670618=0000000000000000
r14 = 0000000000000000  
fffff806`17a325f3 410fbae618      bt      r14d,18h
 
fffff806`17a325f8 7210            jb      nt!ExAllocateHeapPool+0x1ba (fffff806`17a3260a) [br=0]
rcx = 0000000000000000 r13 = ffffe48134002000 [gotonewline][ds:002b:ffffe481`34002018=00000000] 
fffff806`17a325fa 418b4d18        mov     ecx,dword ptr [r13+18h] ds:002b:ffffe481`34002018=00000000
rcx = 0000000000000000 rsp = fffff8061d6705a0 [gotonewline][ss:0018:fffff806`1d6705e8=00000000] 
fffff806`17a325fe 894c2448        mov     dword ptr [rsp+48h],ecx ss:0018:fffff806`1d6705e8=00000000
rcx = 0000000000000000  
fffff806`17a32602 85c9            test    ecx,ecx
 
fffff806`17a32604 0f856df91b00    jne     nt!ExAllocateHeapPool+0x1bfb27 (fffff806`17bf1f77) [br=0]
rax = 0000000000000000 rdi = 0000000000000050 r12 = 00000000424e444e  
fffff806`17a3260a 4c8d2438        lea     r12,[rax+rdi]
r14 = 0000000000000000  
fffff806`17a3260e 410fbae61c      bt      r14d,1Ch
 
fffff806`17a32613 0f82a8f91b00    jb      nt!ExAllocateHeapPool+0x1bfb71 (fffff806`17bf1fc1) [br=0]
r14 = 0000000000000000  
fffff806`17a32619 41f7c6080f0020  test    r14d,20000F08h
 
fffff806`17a32620 0f85a4f91b00    jne     nt!ExAllocateHeapPool+0x1bfb7a (fffff806`17bf1fca) [br=0]
r12 = 0000000000000050  
fffff806`17a32626 4d85e4          test    r12,r12
 
fffff806`17a32629 0f84acf91b00    je      nt!ExAllocateHeapPool+0x1bfb8b (fffff806`17bf1fdb) [br=0]
rdi = 0000000000000050 r12 = 0000000000000050  
fffff806`17a3262f 4c3be7          cmp     r12,rdi
 
fffff806`17a32632 0f82c5090000    jb      nt!ExAllocateHeapPool+0xbad (fffff806`17a32ffd) [br=0]
rax = 0000000000000000  
fffff806`17a32638 48b8ffffffffffffff7f mov rax,7FFFFFFFFFFFFFFFh
rax = 7fffffffffffffff rdi = 0000000000000050  
fffff806`17a32642 483bf8          cmp     rdi,rax
 
fffff806`17a32645 0f87b2090000    ja      nt!ExAllocateHeapPool+0xbad (fffff806`17a32ffd) [br=0]
rax = 7fffffffffffffff r13 = ffffe48134002000  
fffff806`17a3264b 410fb7857c030000 movzx   eax,word ptr [r13+37Ch] ds:002b:ffffe481`3400237c=0200
rdx = 0000000000000000 r14 = 0000000000000000  
fffff806`17a32653 418bd6          mov     edx,r14d
rdx = 0000000000000000  
fffff806`17a32656 81e203000013    and     edx,13000003h
rax = 0000000000000200  
fffff806`17a3265c 83e810          sub     eax,10h
rdx = 0000000000000000 rbp = fffff8061d6706a0 [gotonewline][ss:0018:fffff806`1d6706e0=00000000] 
fffff806`17a3265f 895540          mov     dword ptr [rbp+40h],edx ss:0018:fffff806`1d6706e0=00000000
rax = 00000000000001f0 r12 = 0000000000000050  
fffff806`17a32662 4c3be0          cmp     r12,rax
 
fffff806`17a32665 0f871d060000    ja      nt!ExAllocateHeapPool+0x838 (fffff806`17a32c88) [br=0]
rbx = 0000000000000000 r13 = ffffe48134002000  
fffff806`17a3266b 498d9d40030000  lea     rbx,[r13+340h]
r9 = 0000000000000200 r12 = 0000000000000050  
fffff806`17a32672 458bcc          mov     r9d,r12d
rdi = 0000000000000050 r12 = 0000000000000050  
fffff806`17a32675 413bfc          cmp     edi,r12d
 
fffff806`17a32678 0f8565f91b00    jne     nt!ExAllocateHeapPool+0x1bfb93 (fffff806`17bf1fe3) [br=0]
rax = 00000000000001f0 r9 = 0000000000000050  
fffff806`17a3267e 418d410f        lea     eax,[r9+0Fh]
rax = 000000000000005f  
fffff806`17a32682 c1e804          shr     eax,4
rax = 0000000000000005 rcx = 0000000000000000  
fffff806`17a32685 8bc8            mov     ecx,eax
rax = 0000000000000005 r10 = fffff80617a00000  
fffff806`17a32687 420fb68410f0873700 movzx eax,byte ptr [rax+r10+3787F0h] ds:002b:fffff806`17d787f5=05
rax = 0000000000000005  
fffff806`17a32690 4883c010        add     rax,10h
rax = 0000000000000015 rbx = ffffe48134002340  
fffff806`17a32694 488d04c3        lea     rax,[rbx+rax*8]
rax = ffffe481340023e8 rsp = fffff8061d6705a0 [gotonewline][ss:0018:fffff806`1d6705f0=0000000000000000] 
fffff806`17a32698 4889442450      mov     qword ptr [rsp+50h],rax ss:0018:fffff806`1d6705f0=0000000000000000
rax = ffffe481340023e8 [gotonewline][ds:002b:ffffe481`340023e8=ffffe481340029c0] 
fffff806`17a3269d 488b00          mov     rax,qword ptr [rax] ds:002b:ffffe481`340023e8=ffffe481340029c0
rax = ffffe481340029c0  
fffff806`17a326a0 a801            test    al,1
 
fffff806`17a326a2 0f856b080000    jne     nt!ExAllocateHeapPool+0xac3 (fffff806`17a32f13) [br=0]
 
fffff806`17a326a8 f7056e0e400000040000 test dword ptr [nt!RtlpHpLfhPerfFlags (fffff806`17e33520)],400h ds:002b:fffff806`17e33520=000004ff
r8 = 0000000000000001  
fffff806`17a326b2 41b880000000    mov     r8d,80h
rsp = fffff8061d6705a0 r10 = fffff80617a00000 [gotonewline][ss:0018:fffff806`1d6705f0=ffffe481340023e8] 
fffff806`17a326b8 4c8b542450      mov     r10,qword ptr [rsp+50h] ss:0018:fffff806`1d6705f0=ffffe481340023e8
rbx = ffffe48134002340 rcx = 0000000000000005  
fffff806`17a326bd 0fb64b38        movzx   ecx,byte ptr [rbx+38h] ds:002b:ffffe481`34002378=01
r10 = ffffe481340023e8 [gotonewline][ds:002b:ffffe481`340023e8=ffffe481340029c0] 
fffff806`17a326c1 4d8b12          mov     r10,qword ptr [r10] ds:002b:ffffe481`340023e8=ffffe481340029c0
 
fffff806`17a326c4 0f8522f91b00    jne     nt!ExAllocateHeapPool+0x1bfb9c (fffff806`17bf1fec) [br=1]
r8 = 0000000000000080  
fffff806`17bf1fec 41b8c0000000    mov     r8d,0C0h
 
fffff806`17bf1ff2 e9d306e4ff      jmp     nt!ExAllocateHeapPool+0x27a (fffff806`17a326ca)
rcx = 0000000000000001  
fffff806`17a326ca 0fb6c9          movzx   ecx,cl
rbp = fffff8061d6706a0 r8 = 00000000000000c0 [gotonewline][ss:0018:fffff806`1d670690=fffff8061d6706a8] 
fffff806`17a326cd 4c8945f0        mov     qword ptr [rbp-10h],r8 ss:0018:fffff806`1d670690=fffff8061d6706a8
rax = ffffe481340029c0 rcx = 0000000000000001  
fffff806`17a326d1 488d41ff        lea     rax,[rcx-1]
rax = 0000000000000000  
fffff806`17a326d5 83e007          and     eax,7
rax = 0000000000000000 rcx = 0000000000000001  
fffff806`17a326d8 482bc8          sub     rcx,rax
rcx = 0000000000000001 r11 = fffff8061d670710  
fffff806`17a326db 4c8d5907        lea     r11,[rcx+7]
r8 = 00000000000000c0 r11 = 0000000000000008  
fffff806`17a326df 4d03d8          add     r11,r8
r10 = ffffe481340029c0  
fffff806`17a326e2 41807a0201      cmp     byte ptr [r10+2],1 ds:002b:ffffe481`340029c2=01
rbp = fffff8061d6706a0 r11 = 00000000000000c8 [gotonewline][ss:0018:fffff806`1d670698=0000000000000018] 
fffff806`17a326e7 4c895df8        mov     qword ptr [rbp-8],r11 ss:0018:fffff806`1d670698=0000000000000018
 
fffff806`17a326eb 0f859b010000    jne     nt!ExAllocateHeapPool+0x43c (fffff806`17a3288c) [br=0]
rax = 0000000000000000  
fffff806`17a326f1 32c0            xor     al,al
rax = 0000000000000000  
fffff806`17a326f3 0fb6c0          movzx   eax,al
r8 = 00000000000000c0 r10 = ffffe481340029c0 r11 = 00000000000000c8  
fffff806`17a326f6 4f8d0413        lea     r8,[r11+r10]
rdx = 0000000000000000 rsp = fffff8061d6705a0 [gotonewline][ss:0018:fffff806`1d6705c0=00000000] 
fffff806`17a326fa 89542420        mov     dword ptr [rsp+20h],edx ss:0018:fffff806`1d6705c0=00000000
rdi = 0000000000000050 r9 = 0000000000000050  
fffff806`17a326fe 448bcf          mov     r9d,edi
rdx = 0000000000000000 r10 = ffffe481340029c0  
fffff806`17a32701 498bd2          mov     rdx,r10
rbx = ffffe48134002340 rcx = 0000000000000001  
fffff806`17a32704 488bcb          mov     rcx,rbx
rax = 0000000000000000 r8 = ffffe48134002a88 [gotonewline][ds:002b:ffffe481`34002a88=ffffe48134002b00] 
fffff806`17a32707 4d8b04c0        mov     r8,qword ptr [r8+rax*8] ds:002b:ffffe481`34002a88=ffffe48134002b00
rax = 0000000000000000  
fffff806`17a3270b e860090000      call    nt!RtlpHpLfhSlotAllocate (fffff806`17a33070)
rsp = fffff8061d670598 r9 = 0000000000000050 [gotonewline][ss:0018:fffff806`1d6705b8=00000062] 
fffff806`17a33070 44894c2420      mov     dword ptr [rsp+20h],r9d ss:0018:fffff806`1d6705b8=00000062
rsp = fffff8061d670598 r8 = ffffe48134002b00 [gotonewline][ss:0018:fffff806`1d6705b0=8712000000000000] 
fffff806`17a33075 4c89442418      mov     qword ptr [rsp+18h],r8 ss:0018:fffff806`1d6705b0=8712000000000000
rdx = ffffe481340029c0 rsp = fffff8061d670598 [gotonewline][ss:0018:fffff806`1d6705a8=0000000000000000] 
fffff806`17a3307a 4889542410      mov     qword ptr [rsp+10h],rdx ss:0018:fffff806`1d6705a8=0000000000000000
rcx = ffffe48134002340 rsp = fffff8061d670598 [gotonewline][ss:0018:fffff806`1d6705a0=ffffe48139d9d580] 
fffff806`17a3307f 48894c2408      mov     qword ptr [rsp+8],rcx ss:0018:fffff806`1d6705a0=ffffe48139d9d580
rbp = fffff8061d6706a0  
fffff806`17a33084 55              push    rbp
rbx = ffffe48134002340  
fffff806`17a33085 53              push    rbx
rsi = 0000000000000000  
fffff806`17a33086 56              push    rsi
rdi = 0000000000000050  
fffff806`17a33087 57              push    rdi
r12 = 0000000000000050  
fffff806`17a33088 4154            push    r12
r13 = ffffe48134002000  
fffff806`17a3308a 4155            push    r13
r14 = 0000000000000000  
fffff806`17a3308c 4156            push    r14
r15 = 0000000000000200  
fffff806`17a3308e 4157            push    r15
rsp = fffff8061d670558 rbp = fffff8061d6706a0  
fffff806`17a33090 488d6c24e8      lea     rbp,[rsp-18h]
rsp = fffff8061d670558  
fffff806`17a33095 4881ec18010000  sub     rsp,118h
rdi = 0000000000000050 [gotonewline][ds:002b:fffff806`17e33520=000004ff] 
fffff806`17a3309c 8b3d7e044000    mov     edi,dword ptr [nt!RtlpHpLfhPerfFlags (fffff806`17e33520)] ds:002b:fffff806`17e33520=000004ff
r8 = ffffe48134002b00 r15 = 0000000000000200  
fffff806`17a330a2 4d8bf8          mov     r15,r8
r8 = ffffe48134002b00  
fffff806`17a330a5 4533c0          xor     r8d,r8d
rdi = 00000000000004ff  
fffff806`17a330a8 c1ef02          shr     edi,2
rcx = ffffe48134002340 rdx = ffffe481340029c0  
fffff806`17a330ab 488bd1          mov     rdx,rcx
rsp = fffff8061d670440 [gotonewline][ss:0018:fffff806`1d670480=00] 
fffff806`17a330ae c6442440ff      mov     byte ptr [rsp+40h],0FFh ss:0018:fffff806`1d670480=00
r8 = 0000000000000000 r10 = ffffe481340029c0  
fffff806`17a330b3 458bd0          mov     r10d,r8d
rsp = fffff8061d670440 r8 = 0000000000000000 [gotonewline][ss:0018:fffff806`1d670488=00000000] 
fffff806`17a330b6 4489442448      mov     dword ptr [rsp+48h],r8d ss:0018:fffff806`1d670488=00000000
rsp = fffff8061d670440 r8 = 0000000000000000 [gotonewline][ss:0018:fffff806`1d6704b8=00000000] 
fffff806`17a330bb 4489442478      mov     dword ptr [rsp+78h],r8d ss:0018:fffff806`1d6704b8=00000000
rdi = 000000000000013f  
fffff806`17a330c0 83e701          and     edi,1
rbx = ffffe48134002340 r8 = 0000000000000000  
fffff806`17a330c3 498d58ff        lea     rbx,[r8-1]
rbp = fffff8061d670540 r8 = 0000000000000000 [gotonewline][ss:0018:fffff806`1d6704c0=0000000000000000] 
fffff806`17a330c7 4c894580        mov     qword ptr [rbp-80h],r8 ss:0018:fffff806`1d6704c0=0000000000000000
r13 = ffffe48134002000  
fffff806`17a330cb 41bd01000000    mov     r13d,1
rax = 0000000000000000  
fffff806`17a330d1 b800100000      mov     eax,1000h
rdi = 0000000000000001  
fffff806`17a330d6 85ff            test    edi,edi
 
fffff806`17a330d8 0f849cf01b00    je      nt!RtlpHpLfhSlotAllocate+0x1bf10a (fffff806`17bf217a) [br=0]
rcx = ffffe48134002340 r15 = ffffe48134002b00  
fffff806`17a330de 410f0d4f38      prefetchw [r15+38h]
rsi = 0000000000000000 r15 = ffffe48134002b00 [gotonewline][ds:002b:ffffe481`34002b38=ffffe4813c2a7352] 
fffff806`17a330e3 498b7738        mov     rsi,qword ptr [r15+38h] ds:002b:ffffe481`34002b38=ffffe4813c2a7352
rsi = ffffe4813c2a7352  
fffff806`17a330e7 48f7c6ff0f0000  test    rsi,0FFFh
 
fffff806`17a330ee 0f84bc020000    je      nt!RtlpHpLfhSlotAllocate+0x340 (fffff806`17a333b0) [br=0]
rcx = ffffe48134002340 rsi = ffffe4813c2a7352  
fffff806`17a330f4 488d4eff        lea     rcx,[rsi-1]
rax = 0000000000001000 rsi = ffffe4813c2a7352  
fffff806`17a330f8 488bc6          mov     rax,rsi
rcx = ffffe4813c2a7351 r15 = ffffe48134002b00  
fffff806`17a330fb f0490fb14f38    lock cmpxchg qword ptr [r15+38h],rcx ds:002b:ffffe481`34002b38=ffffe4813c2a7352
 
fffff806`17a33101 0f85910e0000    jne     nt!RtlpHpLfhSlotAllocate+0xf28 (fffff806`17a33f98) [br=0]
rsi = ffffe4813c2a7352  
fffff806`17a33107 4881e600f0ffff  and     rsi,0FFFFFFFFFFFFF000h
 
fffff806`17a3310e 0f849c020000    je      nt!RtlpHpLfhSlotAllocate+0x340 (fffff806`17a333b0) [br=0]
r10 = 0000000000000000  
fffff806`17a33114 4585d2          test    r10d,r10d
 
fffff806`17a33117 0f85840f0000    jne     nt!RtlpHpLfhSlotAllocate+0x1031 (fffff806`17a340a1) [br=0]
r8 = 0000000000000000  
fffff806`17a3311d 4533c0          xor     r8d,r8d
rax = ffffe4813c2a7352 rsi = ffffe4813c2a7000  
fffff806`17a33120 0fb74622        movzx   eax,word ptr [rsi+22h] ds:002b:ffffe481`3c2a7022=0647
rdi = 0000000000000001 rip = fffff80617a33124  
fffff806`17a33124 488d3dd5cefcff  lea     rdi,[nt!SeConvertSecurityDescriptorToStringSecurityDescriptor <PERF> (nt+0x0) (fffff806`17a00000)]
rsi = ffffe4813c2a7000 r14 = 0000000000000000  
fffff806`17a3312b 440fb67627      movzx   r14d,byte ptr [rsi+27h] ds:002b:ffffe481`3c2a7027=19
rsi = ffffe4813c2a7000 r12 = 0000000000000050  
fffff806`17a33130 4c8d6630        lea     r12,[rsi+30h]
rax = 0000000000000647 r14 = 0000000000000019  
fffff806`17a33134 4c03f0          add     r14,rax
rbp = fffff8061d670540 r12 = ffffe4813c2a7030 [gotonewline][ss:0018:fffff806`1d670528=fffff80617a33095] 
fffff806`17a33137 4c8965e8        mov     qword ptr [rbp-18h],r12 ss:0018:fffff806`1d670528=fffff80617a33095
rax = 0000000000000647 r15 = ffffe48134002b00  
fffff806`17a3313b 410fb64701      movzx   eax,byte ptr [r15+1] ds:002b:ffffe481`34002b01=05
rdx = ffffe48134002340  
fffff806`17a33140 ba03000000      mov     edx,3
r13 = 0000000000000001 r14 = 0000000000000660  
fffff806`17a33145 4f8d2c36        lea     r13,[r14+r14]
rax = 0000000000000005 rcx = ffffe4813c2a7351 rdi = fffff80617a00000  
fffff806`17a33149 0fb68c3820c93700 movzx   ecx,byte ptr [rax+rdi+37C920h] ds:002b:fffff806`17d7c925=40
rax = 0000000000000005 rsi = ffffe4813c2a7000  
fffff806`17a33151 8bc6            mov     eax,esi
rax = 000000003c2a7000  
fffff806`17a33153 c1e80c          shr     eax,0Ch
rax = 000000000003c2a7 rsp = fffff8061d670440 [gotonewline][ss:0018:fffff806`1d6704a0=00000000] 
fffff806`17a33156 89442460        mov     dword ptr [rsp+60h],eax ss:0018:fffff806`1d6704a0=00000000
rax = 000000000003c2a7 rsi = ffffe4813c2a7000  
fffff806`17a3315a 334628          xor     eax,dword ptr [rsi+28h] ds:002b:ffffe481`3c2a7028=3a0f08e1
rax = 000000003a0cca46  
fffff806`17a3315d 3305e5034000    xor     eax,dword ptr [nt!RtlpHpHeapGlobals+0x8 (fffff806`17e33548)] ds:002b:fffff806`17e33548=3bdcca16
rax = 0000000001d00050 rsp = fffff8061d670440 [gotonewline][ss:0018:fffff806`1d67048c=00000000] 
fffff806`17a33163 8944244c        mov     dword ptr [rsp+4Ch],eax ss:0018:fffff806`1d67048c=00000000
rax = 0000000001d00050  
fffff806`17a33167 0fb7c0          movzx   eax,ax
rax = 0000000000000050 rbp = fffff8061d670540  
fffff806`17a3316a 394578          cmp     dword ptr [rbp+78h],eax ss:0018:fffff806`1d6705b8=00000050
rax = 0000000000000050 rbp = fffff8061d670540 [gotonewline][ss:0018:fffff806`1d6704dc=00000000] 
fffff806`17a3316d 89459c          mov     dword ptr [rbp-64h],eax ss:0018:fffff806`1d6704dc=00000000
rax = 0000000000000050  
fffff806`17a33170 b801000000      mov     eax,1
rax = 0000000000000001 rdx = 0000000000000003  
fffff806`17a33175 0f43d0          cmovae  edx,eax
rbp = fffff8061d670540 r13 = 0000000000000cc0 [gotonewline][ss:0018:fffff806`1d670520=fffff80600000041] 
fffff806`17a33178 4c896de0        mov     qword ptr [rbp-20h],r13 ss:0018:fffff806`1d670520=fffff80600000041
rax = 0000000000000001 rbp = fffff8061d670540 [gotonewline][ss:0018:fffff806`1d6705a0=ffffe48134002340] 
fffff806`17a3317c 488b4560        mov     rax,qword ptr [rbp+60h] ss:0018:fffff806`1d6705a0=ffffe48134002340
rcx = 0000000000000040 rsp = fffff8061d670440 [gotonewline][ss:0018:fffff806`1d670484=00000000] 
fffff806`17a33180 894c2444        mov     dword ptr [rsp+44h],ecx ss:0018:fffff806`1d670484=00000000
rdx = 0000000000000001 rsp = fffff8061d670440 [gotonewline][ss:0018:fffff806`1d6704a8=0000000000000000] 
fffff806`17a33184 4889542468      mov     qword ptr [rsp+68h],rdx ss:0018:fffff806`1d6704a8=0000000000000000
rax = ffffe48134002340  
fffff806`17a33189 0fb6403e        movzx   eax,byte ptr [rax+3Eh] ds:002b:ffffe481`3400237e=01
rax = 0000000000000001  
fffff806`17a3318d a802            test    al,2
 
fffff806`17a3318f 751a            jne     nt!RtlpHpLfhSlotAllocate+0x13b (fffff806`17a331ab) [br=0]
rax = 0000000000000001  
fffff806`17a33191 e85e561800      call    nt!RtlpLfhIncrementDataSlot (fffff806`17bb87f4)
rbx = ffffffffffffffff rsp = fffff8061d670438 [gotonewline][ss:0018:fffff806`1d670440=0000000000000000] 
fffff806`17bb87f4 48895c2408      mov     qword ptr [rsp+8],rbx ss:0018:fffff806`1d670440=0000000000000000
rsp = fffff8061d670438 rbp = fffff8061d670540 [gotonewline][ss:0018:fffff806`1d670448=0000000000000000] 
fffff806`17bb87f9 48896c2410      mov     qword ptr [rsp+10h],rbp ss:0018:fffff806`1d670448=0000000000000000
rsi = ffffe4813c2a7000 rsp = fffff8061d670438 [gotonewline][ss:0018:fffff806`1d670450=ffffe48139d9d580] 
fffff806`17bb87fe 4889742418      mov     qword ptr [rsp+18h],rsi ss:0018:fffff806`1d670450=ffffe48139d9d580
rdi = fffff80617a00000  
fffff806`17bb8803 57              push    rdi
rsp = fffff8061d670430  
fffff806`17bb8804 4883ec20        sub     rsp,20h
rdi = fffff80617a00000 [gotonewline][gs:002b:00000000`00000188=ffffe4813ab38080] 
fffff806`17bb8808 65488b3c2588010000 mov   rdi,qword ptr gs:[188h] gs:002b:00000000`00000188=ffffe4813ab38080
rbp = fffff8061d670540  
fffff806`17bb8811 bdff000000      mov     ebp,0FFh
rax = 0000000000000001 rdi = ffffe4813ab38080  
fffff806`17bb8816 0fb787f6070000  movzx   eax,word ptr [rdi+7F6h] ds:002b:ffffe481`3ab38876=8d0e
rax = 0000000000008d0e rbx = ffffffffffffffff  
fffff806`17bb881d 0fb7d8          movzx   ebx,ax
rax = 0000000000008d0e rcx = 0000000000000040  
fffff806`17bb8820 0fb7c8          movzx   ecx,ax
rbx = 0000000000008d0e rbp = 00000000000000ff  
fffff806`17bb8823 6623dd          and     bx,bp
rcx = 0000000000008d0e  
fffff806`17bb8826 66c1e908        shr     cx,8
rbx = 000000000000000e rcx = 000000000000008d  
fffff806`17bb882a 663bd9          cmp     bx,cx
 
fffff806`17bb882d 751c            jne     nt!RtlpLfhIncrementDataSlot+0x57 (fffff806`17bb884b) [br=1]
rcx = 000000000000008d  
fffff806`17bb884b b901000000      mov     ecx,1
rbx = 000000000000000e rcx = 0000000000000001  
fffff806`17bb8850 03cb            add     ecx,ebx
rax = 0000000000008d0e rcx = 000000000000000f  
fffff806`17bb8852 6633c8          xor     cx,ax
rcx = 0000000000008d01 rbp = 00000000000000ff  
fffff806`17bb8855 6623cd          and     cx,bp
rax = 0000000000008d0e rcx = 0000000000000001  
fffff806`17bb8858 6633c1          xor     ax,cx
rsp = fffff8061d670410 rbp = 00000000000000ff [gotonewline][ss:0018:fffff806`1d670448=fffff8061d670540] 
fffff806`17bb885b 488b6c2438      mov     rbp,qword ptr [rsp+38h] ss:0018:fffff806`1d670448=fffff8061d670540
rsi = ffffe4813c2a7000 rsp = fffff8061d670410 [gotonewline][ss:0018:fffff806`1d670450=ffffe4813c2a7000] 
fffff806`17bb8860 488b742440      mov     rsi,qword ptr [rsp+40h] ss:0018:fffff806`1d670450=ffffe4813c2a7000
rax = 0000000000008d0f rdi = ffffe4813ab38080 [gotonewline][ds:002b:ffffe481`3ab38876=8d0e] 
fffff806`17bb8865 668987f6070000  mov     word ptr [rdi+7F6h],ax ds:002b:ffffe481`3ab38876=8d0e
rax = 0000000000008d0f rbx = 000000000000000e  
fffff806`17bb886c 0fb7c3          movzx   eax,bx
rbx = 000000000000000e rsp = fffff8061d670410 [gotonewline][ss:0018:fffff806`1d670440=ffffffffffffffff] 
fffff806`17bb886f 488b5c2430      mov     rbx,qword ptr [rsp+30h] ss:0018:fffff806`1d670440=ffffffffffffffff
rsp = fffff8061d670410  
fffff806`17bb8874 4883c420        add     rsp,20h
rdi = ffffe4813ab38080  
fffff806`17bb8878 5f              pop     rdi
 
fffff806`17bb8879 c3              ret
rdx = 0000000000000001 rsp = fffff8061d670440 [gotonewline][ss:0018:fffff806`1d6704a8=0000000000000001] 
fffff806`17a33196 488b542468      mov     rdx,qword ptr [rsp+68h] ss:0018:fffff806`1d6704a8=0000000000000001
rax = 000000000000000e rcx = 0000000000000001  
fffff806`17a3319b 0fb7c8          movzx   ecx,ax
rcx = 000000000000000e rdi = fffff80617a00000 r8 = 0000000000000000  
fffff806`17a3319e 440fb6843920344300 movzx r8d,byte ptr [rcx+rdi+433420h] ds:002b:fffff806`17e3342e=02
rcx = 000000000000000e rsp = fffff8061d670440 [gotonewline][ss:0018:fffff806`1d670484=00000040] 
fffff806`17a331a7 8b4c2444        mov     ecx,dword ptr [rsp+44h] ss:0018:fffff806`1d670484=00000040
rax = 000000000000000e rsi = ffffe4813c2a7000  
fffff806`17a331ab 0fb74624        movzx   eax,word ptr [rsi+24h] ds:002b:ffffe481`3c2a7024=003e
r11 = 00000000000000c8  
fffff806`17a331af 49bb5555555555555555 mov r11,5555555555555555h
rax = 000000000000003e  
fffff806`17a331b9 4803c0          add     rax,rax
rax = 000000000000007c  
fffff806`17a331bc 48c1e806        shr     rax,6
rax = 0000000000000001 rdi = fffff80617a00000 r12 = ffffe4813c2a7030  
fffff806`17a331c0 498d3cc4        lea     rdi,[r12+rax*8]
rax = 0000000000000001 r14 = 0000000000000660  
fffff806`17a331c4 4a8d0475ffffffff lea     rax,[r14*2-1]
rax = 0000000000000cbf  
fffff806`17a331cc 48c1e806        shr     rax,6
rax = 0000000000000032 r12 = ffffe4813c2a7030  
fffff806`17a331d0 4d8d24c4        lea     r12,[r12+rax*8]
r13 = 0000000000000cc0  
fffff806`17a331d4 4983fd40        cmp     r13,40h
 
fffff806`17a331d8 0f8288060000    jb      nt!RtlpHpLfhSlotAllocate+0x7f6 (fffff806`17a33866) [br=0]
rdi = ffffe4813c2a7038 r10 = 0000000000000000 [gotonewline][ds:002b:ffffe481`3c2a7038=5555555555555555] 
fffff806`17a331de 4c8b17          mov     r10,qword ptr [rdi] ds:002b:ffffe481`3c2a7038=5555555555555555
rax = 0000000000000032 r10 = 5555555555555555  
fffff806`17a331e1 498bc2          mov     rax,r10
rax = 5555555555555555 r11 = 5555555555555555  
fffff806`17a331e4 4923c3          and     rax,r11
rax = 5555555555555555 r11 = 5555555555555555  
fffff806`17a331e7 493bc3          cmp     rax,r11
 
fffff806`17a331ea 0f84ae010000    je      nt!RtlpHpLfhSlotAllocate+0x32e (fffff806`17a3339e) [br=1]
rdi = ffffe4813c2a7038 r12 = ffffe4813c2a71c0  
fffff806`17a3339e 493bfc          cmp     rdi,r12
 
fffff806`17a333a1 0f84bd120000    je      nt!RtlpHpLfhSlotAllocate+0x15f4 (fffff806`17a34664) [br=0]
rdi = ffffe4813c2a7038  
fffff806`17a333a7 4883c708        add     rdi,8
 
fffff806`17a333ab e92efeffff      jmp     nt!RtlpHpLfhSlotAllocate+0x16e (fffff806`17a331de)
rdi = ffffe4813c2a7040 r10 = 5555555555555555 [gotonewline][ds:002b:ffffe481`3c2a7040=4044000000114015] 
fffff806`17a331de 4c8b17          mov     r10,qword ptr [rdi] ds:002b:ffffe481`3c2a7040=4044000000114015
rax = 5555555555555555 r10 = 4044000000114015  
fffff806`17a331e1 498bc2          mov     rax,r10
rax = 4044000000114015 r11 = 5555555555555555  
fffff806`17a331e4 4923c3          and     rax,r11
rax = 4044000000114015 r11 = 5555555555555555  
fffff806`17a331e7 493bc3          cmp     rax,r11
 
fffff806`17a331ea 0f84ae010000    je      nt!RtlpHpLfhSlotAllocate+0x32e (fffff806`17a3339e) [br=0]
rdi = ffffe4813c2a7040 r12 = ffffe4813c2a71c0  
fffff806`17a331f0 493bfc          cmp     rdi,r12
 
fffff806`17a331f3 0f84d5050000    je      nt!RtlpHpLfhSlotAllocate+0x75e (fffff806`17a337ce) [br=0]
rcx = 0000000000000040 r8 = 0000000000000002  
fffff806`17a331f9 440fafc1        imul    r8d,ecx
rcx = 0000000000000040 rsp = fffff8061d670440 [gotonewline][ss:0018:fffff806`1d670484=00000040] 
fffff806`17a331fd 894c2444        mov     dword ptr [rsp+44h],ecx ss:0018:fffff806`1d670484=00000040
r8 = 0000000000000080  
fffff806`17a33201 41c1e807        shr     r8d,7
r8 = 0000000000000001  
fffff806`17a33205 4181e0feffff01  and     r8d,1FFFFFEh
r9 = 0000000000000050 r10 = 4044000000114015  
fffff806`17a3320c 4d8bca          mov     r9,r10
r9 = 4044000000114015  
fffff806`17a3320f 49f7d1          not     r9
rcx = 0000000000000040  
fffff806`17a33212 83f940          cmp     ecx,40h
 
fffff806`17a33215 0f8289050000    jb      nt!RtlpHpLfhSlotAllocate+0x734 (fffff806`17a337a4) [br=0]
rax = 4044000000114015 r11 = 5555555555555555  
fffff806`17a3321b 498bc3          mov     rax,r11
rax = 5555555555555555 r9 = bfbbffffffeebfea  
fffff806`17a3321e 4c23c8          and     r9,rax
rcx = 0000000000000040 r8 = 0000000000000000  
fffff806`17a33221 418bc8          mov     ecx,r8d
rcx = 0000000000000000 r9 = 1511555555441540  
fffff806`17a33224 49d3c9          ror     r9,cl
rax = 5555555555555555 r10 = 4044000000114015  
fffff806`17a33227 498bc2          mov     rax,r10
rcx = 0000000000000000 r9 = 1511555555441540  
fffff806`17a3322a 490fbcc9        bsf     rcx,r9
rcx = 0000000000000006 r8 = 0000000000000000  
fffff806`17a3322e 4103c8          add     ecx,r8d
rcx = 0000000000000006  
fffff806`17a33231 83e13f          and     ecx,3Fh
rcx = 0000000000000006 rdx = 0000000000000001  
fffff806`17a33234 48d3e2          shl     rdx,cl
rdx = 0000000000000040 r10 = 4044000000114015  
fffff806`17a33237 490bd2          or      rdx,r10
rcx = 0000000000000006 rbp = fffff8061d670540 [gotonewline][ss:0018:fffff806`1d670544=fffff806] 
fffff806`17a3323a 894d04          mov     dword ptr [rbp+4],ecx ss:0018:fffff806`1d670544=fffff806
rcx = 0000000000000006 rdx = 4044000000114055 rdi = ffffe4813c2a7040  
fffff806`17a3323d f0480fb117      lock cmpxchg qword ptr [rdi],rdx ds:002b:ffffe481`3c2a7040=4044000000114015
rax = 4044000000114015 r10 = 4044000000114015  
fffff806`17a33242 4c8bd0          mov     r10,rax
 
fffff806`17a33245 0f85110d0000    jne     nt!RtlpHpLfhSlotAllocate+0xeec (fffff806`17a33f5c) [br=0]
rdi = ffffe4813c2a7040 rbp = fffff8061d670540  
fffff806`17a3324b 482b7de8        sub     rdi,qword ptr [rbp-18h] ss:0018:fffff806`1d670528=ffffe4813c2a7030
rbp = fffff8061d670540 r13 = 0000000000000cc0 [gotonewline][ss:0018:fffff806`1d6704dc=00000050] 
fffff806`17a3324f 448b6d9c        mov     r13d,dword ptr [rbp-64h] ss:0018:fffff806`1d6704dc=00000050
r13 = 0000000000000050 r14 = 0000000000000660  
fffff806`17a33253 458bf5          mov     r14d,r13d
rax = 4044000000114015 rsp = fffff8061d670440  
fffff806`17a33256 0fb744244e      movzx   eax,word ptr [rsp+4Eh] ss:0018:fffff806`1d67048e=01d0
rdi = 0000000000000010  
fffff806`17a3325b 48c1ff03        sar     rdi,3
rdi = 0000000000000002  
fffff806`17a3325f c1e706          shl     edi,6
rcx = 0000000000000006 rdi = 0000000000000080  
fffff806`17a33262 03f9            add     edi,ecx
rdi = 0000000000000086  
fffff806`17a33264 d1ef            shr     edi,1
rdi = 0000000000000043 r14 = 0000000000000050  
fffff806`17a33266 440faff7        imul    r14d,edi
rsi = ffffe4813c2a7000 rdi = 0000000000000043 [gotonewline][ds:002b:ffffe481`3c2a7024=003e] 
fffff806`17a3326a 66897e24        mov     word ptr [rsi+24h],di ds:002b:ffffe481`3c2a7024=003e
rax = 00000000000001d0 r14 = 00000000000014f0  
fffff806`17a3326e 4403f0          add     r14d,eax
rsi = ffffe4813c2a7000  
fffff806`17a33271 807e2d01        cmp     byte ptr [rsi+2Dh],1 ds:002b:ffffe481`3c2a702d=01
 
fffff806`17a33275 0f86d9000000    jbe     nt!RtlpHpLfhSlotAllocate+0x2e4 (fffff806`17a33354) [br=1]
rax = 00000000000001d0 rbp = fffff8061d670540 [gotonewline][ss:0018:fffff806`1d6705b8=00000050] 
fffff806`17a33354 8b4578          mov     eax,dword ptr [rbp+78h] ss:0018:fffff806`1d6705b8=00000050
rsi = ffffe4813c2a7000 r14 = 00000000000016c0  
fffff806`17a33357 4c03f6          add     r14,rsi
rax = 0000000000000050 r13 = 0000000000000050  
fffff806`17a3335a 413bc5          cmp     eax,r13d
 
fffff806`17a3335d 0f82f70e0000    jb      nt!RtlpHpLfhSlotAllocate+0x11ea (fffff806`17a3425a) [br=0]
r13 = 0000000000000050  
fffff806`17a33363 41bd01000000    mov     r13d,1
r14 = ffffe4813c2a86c0  
fffff806`17a33369 4d85f6          test    r14,r14
 
fffff806`17a3336c 0f84f8f21b00    je      nt!RtlpHpLfhSlotAllocate+0x1bf5fa (fffff806`17bf266a) [br=0]
rcx = 0000000000000006 rsp = fffff8061d670440 [gotonewline][ss:0018:fffff806`1d670488=00000000] 
fffff806`17a33372 8b4c2448        mov     ecx,dword ptr [rsp+48h] ss:0018:fffff806`1d670488=00000000
rcx = 0000000000000000  
fffff806`17a33376 85c9            test    ecx,ecx
 
fffff806`17a33378 0f8508f31b00    jne     nt!RtlpHpLfhSlotAllocate+0x1bf616 (fffff806`17bf2686) [br=0]
rsi = ffffe4813c2a7000 rbp = fffff8061d670540 [gotonewline][ss:0018:fffff806`1d6704c0=0000000000000000] 
fffff806`17a3337e 488b7580        mov     rsi,qword ptr [rbp-80h] ss:0018:fffff806`1d6704c0=0000000000000000
rsp = fffff8061d670440  
fffff806`17a33382 837c247800      cmp     dword ptr [rsp+78h],0 ss:0018:fffff806`1d6704b8=00000000
 
fffff806`17a33387 0f85240c0000    jne     nt!RtlpHpLfhSlotAllocate+0xf41 (fffff806`17a33fb1) [br=0]
rsi = 0000000000000000  
fffff806`17a3338d 4885f6          test    rsi,rsi
 
fffff806`17a33390 0f858f140000    jne     nt!RtlpHpLfhSlotAllocate+0x17b5 (fffff806`17a34825) [br=0]
rax = 0000000000000050 r14 = ffffe4813c2a86c0  
fffff806`17a33396 498bc6          mov     rax,r14
 
fffff806`17a33399 e917150000      jmp     nt!RtlpHpLfhSlotAllocate+0x1845 (fffff806`17a348b5)
rsp = fffff8061d670440  
fffff806`17a348b5 4881c418010000  add     rsp,118h
r15 = ffffe48134002b00  
fffff806`17a348bc 415f            pop     r15
r14 = ffffe4813c2a86c0  
fffff806`17a348be 415e            pop     r14
r13 = 0000000000000001  
fffff806`17a348c0 415d            pop     r13
r12 = ffffe4813c2a71c0  
fffff806`17a348c2 415c            pop     r12
rdi = 0000000000000043  
fffff806`17a348c4 5f              pop     rdi
rsi = 0000000000000000  
fffff806`17a348c5 5e              pop     rsi
rbx = ffffffffffffffff  
fffff806`17a348c6 5b              pop     rbx
rbp = fffff8061d670540  
fffff806`17a348c7 5d              pop     rbp
 
fffff806`17a348c8 c3              ret
rdx = 4044000000114055 rbp = fffff8061d6706a0 [gotonewline][ss:0018:fffff806`1d6706e0=00000000] 
fffff806`17a32710 8b5540          mov     edx,dword ptr [rbp+40h] ss:0018:fffff806`1d6706e0=00000000
rax = ffffe4813c2a86c0 rbx = ffffe48134002340  
fffff806`17a32713 488bd8          mov     rbx,rax
rax = ffffe4813c2a86c0  
fffff806`17a32716 4885c0          test    rax,rax
 
fffff806`17a32719 7409            je      nt!ExAllocateHeapPool+0x2d4 (fffff806`17a32724) [br=0]
rdx = 0000000000000000  
fffff806`17a3271b f6c202          test    dl,2
 
fffff806`17a3271e 0f85d3f81b00    jne     nt!ExAllocateHeapPool+0x1bfba7 (fffff806`17bf1ff7) [br=0]
rdi = 0000000000000050 rsp = fffff8061d6705a0 [gotonewline][ss:0018:fffff806`1d670600=0000000000000050] 
fffff806`17a32724 488b7c2460      mov     rdi,qword ptr [rsp+60h] ss:0018:fffff806`1d670600=0000000000000050
rbx = ffffe4813c2a86c0  
fffff806`17a32729 4883fbff        cmp     rbx,0FFFFFFFFFFFFFFFFh
 
fffff806`17a3272d 0f8455050000    je      nt!ExAllocateHeapPool+0x838 (fffff806`17a32c88) [br=0]
rbx = ffffe4813c2a86c0  
fffff806`17a32733 4885db          test    rbx,rbx
 
fffff806`17a32736 740d            je      nt!ExAllocateHeapPool+0x2f5 (fffff806`17a32745) [br=0]
r14 = 0000000000000000  
fffff806`17a32738 41f7c6080f0030  test    r14d,30000F08h
 
fffff806`17a3273f 0f851af91b00    jne     nt!ExAllocateHeapPool+0x1bfc0f (fffff806`17bf205f) [br=0]
rip = fffff80617a32745 r14 = 0000000000000000  
fffff806`17a32745 4c8d35b4d8fcff  lea     r14,[nt!SeConvertSecurityDescriptorToStringSecurityDescriptor <PERF> (nt+0x0) (fffff806`17a00000)]
rbx = ffffe4813c2a86c0  
fffff806`17a3274c 4885db          test    rbx,rbx
 
fffff806`17a3274f 0f84f7080000    je      nt!ExAllocateHeapPool+0xbfc (fffff806`17a3304c) [br=0]
rbp = fffff8061d6706a0 r10 = 4044000000114015 [gotonewline][ss:0018:fffff806`1d6706f0=424e444e] 
fffff806`17a32755 448b5550        mov     r10d,dword ptr [rbp+50h] ss:0018:fffff806`1d6706f0=424e444e
rax = ffffe4813c2a86c0 rdi = 0000000000000050  
fffff806`17a32759 488bc7          mov     rax,rdi
rax = 0000000000000050  
fffff806`17a3275c 48c1e804        shr     rax,4
rax = 0000000000000005 rbx = ffffe4813c2a86c0 [gotonewline][ds:002b:ffffe481`3c2a86c2=05] 
fffff806`17a32760 884302          mov     byte ptr [rbx+2],al ds:002b:ffffe481`3c2a86c2=05
rax = 0000000000000005 r15 = 0000000000000200  
fffff806`17a32763 410fb6c7        movzx   eax,r15b
rax = 0000000000000000  
fffff806`17a32767 246d            and     al,6Dh
rbx = ffffe4813c2a86c0 r10 = 00000000424e444e [gotonewline][ds:002b:ffffe481`3c2a86c4=6d56694d] 
fffff806`17a32769 44895304        mov     dword ptr [rbx+4],r10d ds:002b:ffffe481`3c2a86c4=6d56694d
rax = 0000000000000000  
fffff806`17a3276d 0c02            or      al,2
rbx = ffffe4813c2a86c0 rsi = 0000000000000000 [gotonewline][ds:002b:ffffe481`3c2a86c0=00] 
fffff806`17a3276f 408833          mov     byte ptr [rbx],sil ds:002b:ffffe481`3c2a86c0=00
rax = 0000000000000002 r13 = ffffe48134002000  
fffff806`17a32772 440fb6e8        movzx   r13d,al
rax = 0000000000000002  
fffff806`17a32776 33c0            xor     eax,eax
rax = 0000000000000000 rbp = fffff8061d6706a0 [gotonewline][ss:0018:fffff806`1d670648=0000000000000000] 
fffff806`17a32778 488945a8        mov     qword ptr [rbp-58h],rax ss:0018:fffff806`1d670648=0000000000000000
rax = 0000000000000000 rbp = fffff8061d6706a0 [gotonewline][ss:0018:fffff806`1d670650=0000000000000000] 
fffff806`17a3277c 488945b0        mov     qword ptr [rbp-50h],rax ss:0018:fffff806`1d670650=0000000000000000
rax = 0000000000000000 rbp = fffff8061d6706a0 [gotonewline][ss:0018:fffff806`1d670658=0000000000000000] 
fffff806`17a32780 488945b8        mov     qword ptr [rbp-48h],rax ss:0018:fffff806`1d670658=0000000000000000
rbx = ffffe4813c2a86c0 r13 = 0000000000000002 [gotonewline][ds:002b:ffffe481`3c2a86c3=02] 
fffff806`17a32784 44886b03        mov     byte ptr [rbx+3],r13b ds:002b:ffffe481`3c2a86c3=02
rax = 0000000000000000 [gotonewline][ds:002b:fffff806`17f6e0fc=ffffff0f] 
fffff806`17a32788 8b056eb95300    mov     eax,dword ptr [nt!PoolHitTag (fffff806`17f6e0fc)] ds:002b:fffff806`17f6e0fc=ffffff0f
rax = 00000000ffffff0f r10 = 00000000424e444e  
fffff806`17a3278e 443bd0          cmp     r10d,eax
 
fffff806`17a32791 0f8450f91b00    je      nt!ExAllocateHeapPool+0x1bfc97 (fffff806`17bf20e7) [br=0]
rax = 00000000ffffff0f [gotonewline][ds:002b:fffff806`17f6f404=00004184] 
fffff806`17a32797 8b0567cc5300    mov     eax,dword ptr [nt!PerfGlobalGroupMask+0x4 (fffff806`17f6f404)] ds:002b:fffff806`17f6f404=00004184
rax = 0000000000004184  
fffff806`17a3279d a841            test    al,41h
 
fffff806`17a3279f 0f8548f91b00    jne     nt!ExAllocateHeapPool+0x1bfc9d (fffff806`17bf20ed) [br=0]
r8 = 0000000000000000 r13 = 0000000000000002  
fffff806`17a327a5 458bc5          mov     r8d,r13d
r8 = 0000000000000002  
fffff806`17a327a8 4183e020        and     r8d,20h
rbp = fffff8061d6706a0 r8 = 0000000000000000 [gotonewline][ss:0018:fffff806`1d6706e0=00000000] 
fffff806`17a327ac 44894540        mov     dword ptr [rbp+40h],r8d ss:0018:fffff806`1d6706e0=00000000
 
fffff806`17a327b0 0f85b3040000    jne     nt!ExAllocateHeapPool+0x819 (fffff806`17a32c69) [br=0]
rax = 0000000000004184 [gotonewline][gs:002b:00000000`000001a4=00000000] 
fffff806`17a327b6 658b0425a4010000 mov     eax,dword ptr gs:[1A4h] gs:002b:00000000`000001a4=00000000
rbx = ffffe4813c2a86c0 r9 = 1511555555441540 [gotonewline][ds:002b:fffff806`17e2ebc0=0000000000000fff] 
fffff806`17a327be 4c8b0dfbc33f00  mov     r9,qword ptr [nt!PoolTrackTableMask (fffff806`17e2ebc0)] ds:002b:fffff806`17e2ebc0=0000000000000fff
rax = 0000000000000000 rdx = 0000000000000000 r14 = fffff80617a00000 [gotonewline][ds:002b:fffff806`17e2c3c0=ffffe48134602000] 
fffff806`17a327c5 498b94c6c0c34200 mov     rdx,qword ptr [r14+rax*8+42C3C0h] ds:002b:fffff806`17e2c3c0=ffffe48134602000
rbx = ffffe4813c2a86c0 r14 = fffff80617a00000 [gotonewline][ds:002b:fffff806`17e2ec18=0000000000001001] 
fffff806`17a327cd 4c8b3544c43f00  mov     r14,qword ptr [nt!PoolTrackTableSize (fffff806`17e2ec18)] ds:002b:fffff806`17e2ec18=0000000000001001
rsp = fffff8061d6705a0 r14 = 0000000000001001 [gotonewline][ss:0018:fffff806`1d670608=0000000000000000] 
fffff806`17a327d4 4c89742468      mov     qword ptr [rsp+68h],r14 ss:0018:fffff806`1d670608=0000000000000000
rax = 0000000000000000 r10 = 00000000424e444e  
fffff806`17a327d9 418bc2          mov     eax,r10d
rax = 00000000424e444e rcx = 0000000000000000  
fffff806`17a327dc 4869c85f9e0000  imul    rcx,rax,9E5Fh
rsp = fffff8061d6705a0 r9 = 0000000000000fff [gotonewline][ss:0018:fffff806`1d6705f0=ffffe481340023e8] 
fffff806`17a327e3 4c894c2450      mov     qword ptr [rsp+50h],r9 ss:0018:fffff806`1d6705f0=ffffe481340023e8
rcx = 00002904e9337cf2 rsi = 0000000000000000  
fffff806`17a327e8 488bf1          mov     rsi,rcx
rdx = ffffe48134602000 rsp = fffff8061d6705a0 [gotonewline][ss:0018:fffff806`1d6705e0=0000000000000000] 
fffff806`17a327eb 4889542440      mov     qword ptr [rsp+40h],rdx ss:0018:fffff806`1d6705e0=0000000000000000
rsi = 00002904e9337cf2  
fffff806`17a327f0 48c1ee20        shr     rsi,20h
rcx = 00002904e9337cf2 rsi = 0000000000002904  
fffff806`17a327f4 33f1            xor     esi,ecx
rsi = 00000000e93355f6 r9 = 0000000000000fff  
fffff806`17a327f6 4123f1          and     esi,r9d
rsi = 00000000000005f6 r11 = 5555555555555555  
fffff806`17a327f9 448bde          mov     r11d,esi
rsi = 00000000000005f6 rsp = fffff8061d6705a0 [gotonewline][ss:0018:fffff806`1d6705e8=00000000] 
fffff806`17a327fc 89742448        mov     dword ptr [rsp+48h],esi ss:0018:fffff806`1d6705e8=00000000
rcx = 00002904e9337cf2 rsi = 00000000000005f6  
fffff806`17a32800 8bce            mov     ecx,esi
rcx = 00000000000005f6 r12 = 0000000000000050  
fffff806`17a32802 4c6be138        imul    r12,rcx,38h
rax = 00000000424e444e rdx = ffffe48134602000 r12 = 0000000000014dd0 [gotonewline][ds:002b:ffffe481`34616dd0=424e444e] 
fffff806`17a32806 428b0422        mov     eax,dword ptr [rdx+r12] ds:002b:ffffe481`34616dd0=424e444e
rdx = ffffe48134602000 r12 = 0000000000014dd0 r14 = 0000000000001001  
fffff806`17a3280a 4e8d3422        lea     r14,[rdx+r12]
rax = 00000000424e444e r10 = 00000000424e444e  
fffff806`17a3280e 413bc2          cmp     eax,r10d
 
fffff806`17a32811 0f8594000000    jne     nt!ExAllocateHeapPool+0x45b (fffff806`17a328ab) [br=0]
r13 = 0000000000000002  
fffff806`17a32817 41f6c501        test    r13b,1
 
fffff806`17a3281b 7465            je      nt!ExAllocateHeapPool+0x432 (fffff806`17a32882) [br=1]
rax = 00000000424e444e  
fffff806`17a32882 b808000000      mov     eax,8
rax = 0000000000000008 rcx = 00000000000005f6  
fffff806`17a32887 8d4808          lea     ecx,[rax+8]
 
fffff806`17a3288a eb9b            jmp     nt!ExAllocateHeapPool+0x3d7 (fffff806`17a32827)
rcx = 0000000000000010 r14 = ffffe48134616dd0  
fffff806`17a32827 f049ff040e      lock inc qword ptr [r14+rcx] ds:002b:ffffe481`34616de0=000000000000000d
rax = 0000000000000008 rdi = 0000000000000050 r14 = ffffe48134616dd0  
fffff806`17a3282c f0490fc13c06    lock xadd qword ptr [r14+rax],rdi ds:002b:ffffe481`34616dd8=0000000000000510
r15 = 0000000000000200  
fffff806`17a32832 41f6c704        test    r15b,4
 
fffff806`17a32836 0f852e010000    jne     nt!ExAllocateHeapPool+0x51a (fffff806`17a3296a) [br=0]
rbx = ffffe4813c2a86c0 rsi = 00000000000005f6  
fffff806`17a3283c 488d7310        lea     rsi,[rbx+10h]
rsi = ffffe4813c2a86d0  
fffff806`17a32840 4885f6          test    rsi,rsi
 
fffff806`17a32843 0f841cf91b00    je      nt!ExAllocateHeapPool+0x1bfd15 (fffff806`17bf2165) [br=0]
rsp = fffff8061d6705a0 r13 = 0000000000000002 [gotonewline][ss:0018:fffff806`1d6706e8=ffffe481394b7d70] 
fffff806`17a32849 4c8bac2448010000 mov     r13,qword ptr [rsp+148h] ss:0018:fffff806`1d6706e8=ffffe481394b7d70
rax = 0000000000000008 rsi = ffffe4813c2a86d0  
fffff806`17a32851 488bc6          mov     rax,rsi
rsp = fffff8061d6705a0 r14 = ffffe48134616dd0 [gotonewline][ss:0018:fffff806`1d6706a0=0000000000000000] 
fffff806`17a32854 4c8bb42400010000 mov     r14,qword ptr [rsp+100h] ss:0018:fffff806`1d6706a0=0000000000000000
rsp = fffff8061d6705a0  
fffff806`17a3285c 4881c408010000  add     rsp,108h
r15 = 0000000000000200  
fffff806`17a32863 415f            pop     r15
r12 = 0000000000014dd0  
fffff806`17a32865 415c            pop     r12
rdi = 0000000000000510  
fffff806`17a32867 5f              pop     rdi
rsi = ffffe4813c2a86d0  
fffff806`17a32868 5e              pop     rsi
rbx = ffffe4813c2a86c0  
fffff806`17a32869 5b              pop     rbx
rbp = fffff8061d6706a0  
fffff806`17a3286a 5d              pop     rbp
 
fffff806`17a3286b c3              ret
rax = ffffe4813c2a86d0  
fffff806`17d6a06d 4885c0          test    rax,rax
 
fffff806`17d6a070 0f8438000000    je      nt!ExAllocatePoolWithTag+0x9e (fffff806`17d6a0ae) [br=0]
rax = ffffe4813c2a86d0 rbx = 0000000000000000  
fffff806`17d6a076 488bd8          mov     rbx,rax
rsp = fffff8061d6706e0 rbp = 00000000424e444e [gotonewline][ss:0018:fffff806`1d670738=fffff8061d670800] 
fffff806`17d6a079 488b6c2458      mov     rbp,qword ptr [rsp+58h] ss:0018:fffff806`1d670738=fffff8061d670800
rax = ffffe4813c2a86d0 rbx = ffffe4813c2a86d0  
fffff806`17d6a07e 488bc3          mov     rax,rbx
rbx = ffffe4813c2a86d0 rsp = fffff8061d6706e0 [gotonewline][ss:0018:fffff806`1d670730=ffffe48139332b80] 
fffff806`17d6a081 488b5c2450      mov     rbx,qword ptr [rsp+50h] ss:0018:fffff806`1d670730=ffffe48139332b80
rsi = 0000000000000038 rsp = fffff8061d6706e0 [gotonewline][ss:0018:fffff806`1d670740=ffffe4813769ed80] 
fffff806`17d6a086 488b742460      mov     rsi,qword ptr [rsp+60h] ss:0018:fffff806`1d670740=ffffe4813769ed80
rsp = fffff8061d6706e0  
fffff806`17d6a08b 4883c430        add     rsp,30h
r15 = 0000000000000001  
fffff806`17d6a08f 415f            pop     r15
r14 = 0000000000000000  
fffff806`17d6a091 415e            pop     r14
rdi = 0000000000000200  
fffff806`17d6a093 5f              pop     rdi
 
fffff806`17d6a094 c3              ret
<EOF>
